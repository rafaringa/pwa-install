import { LitElement, PropertyValues } from "lit";
import { IRelatedApp, PWAInstallAttributes } from "./types/types";
export declare class PWAInstallElement extends LitElement {
    manifestUrl: string;
    icon: string;
    name: string;
    description: string;
    installDescription: string;
    disableDescription: boolean;
    multiplePrompts: boolean;
    disableScreenshots: boolean;
    disableScreenshotsApple: boolean;
    disableScreenshotsChrome: boolean;
    manualApple: boolean;
    manualChrome: boolean;
    disableChrome: boolean;
    disableClose: boolean;
    disableFallback: boolean;
    useLocalStorage: boolean;
    noSetStorage: boolean;
    static get styles(): CSSStyleSheet[];
    externalPromptEvent: BeforeInstallPromptEvent | null;
    platforms: BeforeInstallPromptEvent["platforms"];
    userChoiceResult: string;
    isDialogHidden: boolean;
    isInstallAvailable: boolean;
    isAppleMobilePlatform: boolean;
    isAppleDesktopPlatform: boolean;
    isAndroidFallback: boolean;
    isAndroid: boolean;
    isUnderStandaloneMode: boolean;
    isRelatedAppsInstalled: boolean;
    private _isRTL;
    private _manifest;
    private _howToRequested;
    private _galleryRequested;
    private _install;
    install: () => void;
    private _hideDialog;
    private _hideDialogUser;
    hideDialog: () => void;
    showDialog: (forced?: boolean) => void;
    getInstalledRelatedApps: () => Promise<IRelatedApp[]>;
    private _toggleHowTo;
    private _toggleGallery;
    private _checkPlatform;
    private _checkInstallAvailable;
    private _init;
    private _requestUpdate;
    connectedCallback(): Promise<void>;
    willUpdate(changedProperties: PropertyValues<this>): void;
    render(): import("lit").TemplateResult<1>;
}
export { PWAInstallAttributes };
